開発中のメモや予定などを記録していくところ

・2018/11/07 17:24
前回までに、トランプを表示し、ドラッグ＆ドロップによって操作できるようにし、違うカードの色で、かつ前の数字のトランプにしか置けないようにした。
しかし、現在のトランプのシステムだと複数枚同時のドラッグが難しかったり、パネルを操作していて、トランプのデータを操作していないことなど問題点がある。
そこで、まずはフォームアプリケーションのことを忘れ、コンソールアプリケーションとして考え、ソリティアクラスでトランプの操作を行えるメソッドを作成する。
次に考えたいのがパネルの表示方法だ、前回作成したオセロアプリでは、オセロボードのパネル、マスそれぞれがパネルを持っているという構造であった。
コンソールアプリケーションからフォームアプリケーションに移行したのでこうなった。IFormPanelインターフェースをそれぞれが持ち、formPanelプロパティがパネルを返してくれる。
前回の方法ではこの方法でそれぞれに名前を付け、EventHandlerのsenderから名前を得て、そこから操作を行っていたがこれはスマートじゃないしあほくさい。
ということで、EventHandlerにカード構造体のメソッドを入れたいが、なんだかそれもあほくさい（構造体だし、ソリティアクラスのプロパティ用意するのもちょっと変）。
そもそもカードが構造体なのはシャッフル時にGC的な問題が起こると思ったからである。が、newするわけでもないのだからいらぬ心配、というかなんで構造体にしたんだ。
というわけで、カードをクラスにする。次の問題が、IFormPanelインターフェースを使用するか、Panelを継承させるかの問題。何だかインターフェースを使う方がスマートな感じがする。

・21:20
カードのクラス化、ドラッグ＆ドロップの改良などを行った。カードを重ねる時に、前のカードのコントロールに追加すると楽ではあるが、見切れてしまうので没に。
そこで、見えないパネルの列を作成し、そこにドロップすることにした。
次回はカードの移動メソッドをソリティアクラスに追加したいMove(int 列)みたいな感じで（フォーム関連の移動の意味ではなく、データとしての移動）

・2018/11/08 02:48
「とりあえずは」複数毎の移動が出来たが、酷いコードである。
現状ドラッグ中に、移動している描写が掴んだカードしかしていないが、これは移動用パネルを作成し、それに移動するカードを追加するといった形が一番スマートだと思うので次回これを追加したい。
また、ドロップする用の見えないパネルに、カードのパネルを追加しているが、移動した時にコントロールの追加をしないといけないのでパラパラしてる。
これの対策として、「レイヤー」の概念を導入し、当たり判定用の見えないパネルのレイヤーと、カードのグラフィックのパネルのレイヤーを分けるという方法を行いたいと思う。
こうすることにより、カードのグラフィックにドロップ時のあたり判定が当たらないので楽になる。

※ドロップ時の当たり判定
見えない当たり判定パネルを追加しているコントロールにカーソルの座標を渡してカードを探している。

・6:17
だいぶいい感じになった。しかし、現状つかむとき、続くカードが連続していなくてもつかめてしまうので次回そこを変更したい。